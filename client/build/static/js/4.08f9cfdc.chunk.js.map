{"version":3,"sources":["actions/search.js","assets/crown.svg","assets/sword.svg","assets/axes.svg","assets/win.jpg","assets/loss.jpg","assets/bg.jpg","views/Battle/grid.js","actions/list.js","views/Battle/list.js","Routes/Battle.js","views/Layout/PageContent.js","assets/logo.jpg","views/Search/index.js","views/Layout/PageHeader.js","views/Layout/index.js"],"names":["server_url","loadingOnSearch","dispatch","a","type","LOADING_BATTLE_SEARCH","loadingOnSumbitSearch","LOADING_SEARCHED_BATTLE","loaderCSS","css","bgCard","backgroundImage","bg","backgroundSize","backgroundPositionX","paddingBottom","winBg","win","lossBg","loss","arrToString","names","filter","name","join","connect","state","loading","search","loadingBattle","battle_id","selectedBattle","getSearchedBattle","config","headers","axios","get","res","SHOW_SEARCHED_BATTLE","payload","data","response","console","log","useState","year","battle_number","attacker_king","defender_king","attacker_1","attacker_2","attacker_3","attacker_4","defender_1","defender_2","defender_3","defender_4","attacker_outcome","battle_type","major_death","major_capture","attacker_size","defender_size","attacker_commander","defender_commander","summer","location","region","note","setData","progress","setProgress","fightInProgress","setFight","timer","setTimer","outcome","setOutcome","resetFight","clearInterval","useMemo","useEffect","subscribe","asyncCall","className","Container","Row","Col","md","style","minHeight","size","ProgressBar","animated","now","min","max","xs","color","Image","src","crown","width","height","sword","ax","Button","variant","onClick","initialProgress","setInterval","fightProgress","title","loadingOnList","LOADING_BATTLES_LIST","loadingOnCount","LOADING_BATTLES_COUNT","BattleRoutes","path","exact","component","Home","battles","loadingList","loadingCount","count","list","getList","SHOW_BATTLE_LIST","getCount","SHOW_BATTLE_COUNT","resetComponent","RESET_BATTLE","withRouter","onlyOnce","setOnce","map","battle","index","PageContent","routes","fallback","route","idx","render","props","err","React","memo","sortingParams","searchBattle","searchParams","params","UPDATE_SEARCH_PARAMS","SHOW_SEARCH_LIST","updateSearchedBattleID","UPDATE_SEARCH_BATTLE_ID","RESET_SEARCHED_BATTLE","delayTimer","limit","king","listParams","loadOptions","inputValue","then","status","b","value","_id","label","lg","placeholder","cacheOptions","isLoading","defaultOptions","onChange","fieldValue","length","item","input","cb","delay","clearTimeout","Promise","resolve","setTimeout","execWithDelay","PageHeader","Navbar","fixed","expand","Brand","href","logo","padding","alt","Toggle","aria-controls","Collapse","id","Nav","Link"],"mappings":"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","file":"static/js/4.08f9cfdc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  LOADING_BATTLE_SEARCH,\n  LOADING_SEARCHED_BATTLE,\n  SHOW_SEARCH_LIST,\n  SHOW_SEARCHED_BATTLE,\n  RESET_SEARCHED_BATTLE,\n  UPDATE_SEARCH_PARAMS,\n  UPDATE_SEARCH_BATTLE_ID,\n} from \"actions/types\";\n\nconst server_url = `http://ec2-52-91-87-52.compute-1.amazonaws.com:5005`;\n\n// Search Battle\nexport const searchBattle = (searchParams) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    config.params = searchParams;\n    dispatch(loadingOnSearch());\n    const res = await axios.get(`${server_url}/search`, config);\n    \n    dispatch({\n      type: UPDATE_SEARCH_PARAMS,\n      payload: searchParams,\n    });\n\n    dispatch({\n      type: SHOW_SEARCH_LIST,\n      payload: res.data.response,\n    });\n    return res;\n    \n  } catch (err) {\n    console.log(\"search error\", err);\n  }\n};\n\nexport const updateSearchedBattleID = (battle_id) => async dispatch => {\n  if(battle_id) {\n    dispatch({\n      type: UPDATE_SEARCH_BATTLE_ID,\n      payload: battle_id,\n    });\n  }\n}\n\n// Get the Details of Searched Battle\nexport const getSearchedBattle = (battle_id) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    dispatch(loadingOnSumbitSearch());\n    const res = await axios.get(`${server_url}/${battle_id}`, config);\n    dispatch({\n      type: SHOW_SEARCHED_BATTLE,\n      payload: res.data.response\n    });\n  } catch (err) {\n    console.log(\"search error\", err);\n  }\n};\n\n\n// Dispatch Loading\nexport const loadingOnSearch = () => async dispatch => {\n  await dispatch({ type: LOADING_BATTLE_SEARCH });\n};\n\n// Dispatch Loading\nexport const loadingOnSumbitSearch = () => async dispatch => {\n  await dispatch({ type: LOADING_SEARCHED_BATTLE });\n};\n\n// Dispatch Reset store\nexport const resetComponent = () => async dispatch => {\n  await dispatch({ type: RESET_SEARCHED_BATTLE });\n};\n","export default __webpack_public_path__ + \"static/media/crown.467069d5.svg\";","export default __webpack_public_path__ + \"static/media/sword.8149fb4a.svg\";","export default __webpack_public_path__ + \"static/media/axes.442d342d.svg\";","export default __webpack_public_path__ + \"static/media/win.41c3b97f.jpg\";","export default __webpack_public_path__ + \"static/media/loss.b2b98a9b.jpg\";","export default __webpack_public_path__ + \"static/media/bg.1d3f370f.jpg\";","import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Col, Row, Container, Image, ProgressBar, Button } from \"react-bootstrap\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getSearchedBattle } from \"actions/search\";\nimport crown from \"assets/crown.svg\";\nimport sword from \"assets/sword.svg\";\nimport ax from \"assets/axes.svg\";\nimport { GiCaduceus, GiDeathSkull, GiRank3, GiThorHammer, GiSun, GiSnowflake1 } from \"react-icons/gi\";\nimport win from \"assets/win.jpg\";\nimport loss from \"assets/loss.jpg\";\nimport bg from \"assets/bg.jpg\";\n\nconst loaderCSS = css`\n  position: absolute;\n  top: calc(50% - 30px);\n  left: calc(50% - 30px);\n`;\n\nconst bgCard = {\n  backgroundImage: `url(${bg})`,\n  backgroundSize: 'cover',\n  backgroundPositionX: 'center',\n  paddingBottom: 15\n};\n\nconst winBg = {\n  backgroundImage: `url(${win})`,\n  backgroundSize: 'cover'\n};\n\nconst lossBg = {\n  backgroundImage: `url(${loss})`,\n  backgroundSize: 'cover'\n}\n\nconst arrToString = (names) => {\n  names = names.filter(name => !!name);\n  const nameString = names.join(\",\");\n  return nameString;\n}\n\nconst Grid = ({\n  battle_id,\n  selectedBattle,\n  loading,\n  getSearchedBattle,\n}) => {\n  \n  const initialData = {\n    name: \"\",\n    year: \"\",\n    battle_number: 0,\n    attacker_king: \"\",\n    defender_king: \"\",\n    attacker_1: \"\",\n    attacker_2: \"\",\n    attacker_3: \"\",\n    attacker_4: \"\",\n    defender_1: \"\",\n    defender_2: \"\",\n    defender_3: \"\",\n    defender_4: \"\",\n    attacker_outcome: \"\",\n    battle_type: \"\",\n    major_death: 0,\n    major_capture: 0,\n    attacker_size: 0,\n    defender_size: 0,\n    attacker_commander: \"\",\n    defender_commander: \"\",\n    summer: 0,\n    location: \"\",\n    region: \"\",\n    note: \"\",\n  };\n\n  const [data, setData] = useState(initialData);\n  const [progress, setProgress] = useState(0);\n  const [fightInProgress, setFight] = useState(false);\n  const [timer, setTimer] = useState(null);\n  const [outcome, setOutcome] = useState(null);\n\n  const {\n    name,\n    year,\n    battle_number,\n    attacker_king,\n    defender_king,\n    attacker_1,\n    attacker_2,\n    attacker_3,\n    attacker_4,\n    defender_1,\n    defender_2,\n    defender_3,\n    defender_4,\n    attacker_outcome,\n    battle_type,\n    major_death,\n    major_capture,\n    attacker_size,\n    defender_size,\n    attacker_commander,\n    defender_commander,\n    summer,\n    location,\n    region,\n    note\n  } = data;\n\n  const resetFight = () => {\n    setFight(false);\n    setProgress(0);\n    if(timer) clearInterval(timer);\n  }\n\n\n  const fightProgress = () => {\n    let initialProgress = 0;\n    setTimer(setInterval(function() {\n      initialProgress += 10;\n      setProgress(initialProgress);\n      if(initialProgress >= 100) {\n        setOutcome( attacker_outcome === \"win\" ? \"attacker\": \"defender\");\n        resetFight();\n      }\n    }, 1000));\n  }\n\n  const startFight = () => {\n    setFight(true);\n    fightProgress();\n  }\n\n  useMemo(() => {\n    resetFight();\n    setOutcome(null);\n    if(battle_id) getSearchedBattle(battle_id);\n  }, [getSearchedBattle, battle_id]);\n\n  useEffect(() => {\n    let subscribe = true;\n    async function asyncCall() {\n      if(subscribe && selectedBattle) {\n        setData({\n          ...selectedBattle,\n        });\n      }\n    }\n    asyncCall();\n    return () => subscribe = false;\n  }, [selectedBattle]);\n\n  return (\n    <section className=\"sptb p-2\">    \n      <Container>\n      {\n        !battle_id ? (\n          <Row>\n            <Col md={10} className=\"m-auto\">\n              <h3>Please Search for a battle...</h3>\n            </Col>\n          </Row>\n        ): (\n            <Row>\n              <Col md={10} className=\"m-auto\">\n                <div className=\"p-2\">\n                  <div style={{ minHeight: 697, ...bgCard }} className=\"border shadow-lg bg-vs\">\n                    {\n                      loading && (\n                      <div className=\"custom_overlay\">\n                        <ClipLoader \n                          css={loaderCSS}\n                          size={60}\n                          loading={true}\n                        />\n                      </div>)\n                    }\n                    {\n                      fightInProgress && (<div className=\"fixed-bar d-flex align-items-center justify-content-center\">\n                          <ProgressBar animated now={progress} min={0} max={100} className=\"w-lg-60 w-md-60\" />\n                        </div>)\n                    }\n                    <div className=\"container\">\n                      <Row className=\"d-flex justify-content-center mb-2\">\n                        <div><span className=\"battle-name-label shadow\">{`${battle_number}. ${name}`}</span></div>\n                      </Row>\n                      <Row className=\"d-flex justify-content-center mb-2\">\n                        <div className=\"battle-history text-white\">\n                          <div>{`Location: ${location}`}</div>\n                          <div>{`Region: ${region}`}</div>\n                          <div>{`Year: ${year} `}</div>\n                        </div>\n                      </Row>\n                      <Row>\n                        <Col md={6} xs={12} className=\"p-4\">\n                          <div className=\"border battle-card left\" style={ attacker_outcome === \"win\" ? winBg: lossBg }>\n                            { !!outcome && (outcome === \"attacker\" ? (<div className=\"text outcome\">\n                                <GiCaduceus color=\"#ffc107\" size=\"32px\" />\n                              </div>): (<div className=\"text outcome\">\n                                <GiDeathSkull color=\"#2684ff\" size=\"32px\" />\n                              </div>))\n                            }\n                            <div className=\"text\">\n                              <Image src={crown} width={28} height={28} className=\"mr-2\" />\n                              <span>{attacker_king}</span>\n                            </div>\n                            <div className=\"text\">\n                              <Image src={sword} width={28} height={28} className=\"mr-2\"  />\n                              <span>{attacker_size || 0}</span>\n                            </div>\n                            <div className=\"text\">\n                              <GiRank3 size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>\n                              <span>{attacker_commander}</span>\n                            </div>\n                            <div className=\"text\">\n                              <Image src={ax} width={28} height={28} className=\"mr-2\" />\n                              <span>{arrToString([attacker_1, attacker_2, attacker_3, attacker_4])}</span>\n                            </div>\n                            <div className=\"text\">\n                              <GiThorHammer size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>\n                              <span>{battle_type}</span>\n                            </div>\n                            <div className=\"text\">\n                            { \n                              !!summer && (summer ? <GiSun size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>: \n                              <GiSnowflake1 size=\"28px\" className=\"mr-2\" color=\"#fff\"/>)\n                            }\n                            </div>\n                          </div>\n                        </Col>\n                        <Col md={6} xs={12} className=\"p-4\">\n                          <div className=\"border battle-card right\" style={ attacker_outcome === \"win\" ? lossBg: winBg }>\n                            { !!outcome && (outcome === \"attacker\" ? (<div className=\"text outcome\">\n                                <GiDeathSkull color=\"#2684ff\" size=\"32px\"/>\n                              </div>): (<div className=\"text outcome\">\n                                <GiCaduceus color=\"#ffc107\" size=\"32px\"/>\n                              </div>))\n                            }\n                            <div className=\"text skew-right\">\n                              <Image src={crown} width={28} height={28} className=\"mr-2\" />\n                              <span>{defender_king}</span>\n                            </div>\n                            <div className=\"text skew-right\">\n                              <Image src={sword} width={28} height={28} className=\"mr-2\"  />\n                              <span>{defender_size || 0}</span>\n                            </div>\n                            <div className=\"text skew-right\">\n                              <GiRank3 size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>\n                              <span>{defender_commander}</span>\n                            </div>\n                            <div className=\"text skew-right\">\n                              <Image src={ax} width={28} height={28} className=\"mr-2\" />\n                              <span>{arrToString([defender_1, defender_2, defender_3, defender_4])}</span>\n                            </div>\n                            <div className=\"text\">\n                              <GiThorHammer size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>\n                              <span>{battle_type}</span>\n                            </div>\n                            <div className=\"text\">\n                            { \n                              !!summer && (summer ? <GiSun size=\"28px\" className=\"mr-2\" color=\"#ffc107\"/>: \n                              <GiSnowflake1 size=\"28px\" className=\"mr-2\" color=\"#fff\"/>)\n                            }\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                      {\n                        !!note && <Row className=\"mt-2 mb-2\">\n                          <Col>\n                            <span className=\"text-white\">{note}</span>\n                          </Col>\n                        </Row>\n                      }\n                      {\n                        !!attacker_outcome && <Row>\n                          <Col md={4} className=\"m-auto\">\n                            <Button\n                              variant=\"outline-info\"\n                              className=\"w-100\"\n                              onClick={startFight}\n                              title=\"Start Fight\"\n                            >\n                              Fight\n                            </Button>\n                          </Col>\n                        </Row>\n                      }\n                    </div>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          )\n        }\n      </Container>\n    </section>\n  );\n} \n\nGrid.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.search.loadingBattle,\n  battle_id: state.search.battle_id,\n  selectedBattle: state.search.selectedBattle,\n});\n\nexport default connect(mapStateToProps, {\n  getSearchedBattle\n})(Grid);\n\n","import axios from \"axios\";\nimport {\n  LOADING_BATTLES_LIST,\n  LOADING_BATTLES_COUNT,\n  SHOW_BATTLE_LIST,\n  SHOW_BATTLE_COUNT,\n  RESET_BATTLE,\n} from \"actions/types\";\n\nconst server_url = `http://ec2-52-91-87-52.compute-1.amazonaws.com:5005`;\n\n// Get Battle List\nexport const getList = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    dispatch(loadingOnList());\n    const res = await axios.get(`${server_url}/list`, config);\n    dispatch({\n      type: SHOW_BATTLE_LIST,\n      payload: res.data.response,\n    });\n  } catch (err) {\n    console.log(\"list error\", err);\n  }\n};\n\nexport const getCount = () => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    dispatch(loadingOnCount());\n    const res = await axios.get(`${server_url}/count`, config);\n    dispatch({\n      type: SHOW_BATTLE_COUNT,\n      payload: res.data.response\n    });\n  } catch (err) {\n    console.log(\"count error\", err);\n  }\n};\n\n// Dispatch Loading\nexport const loadingOnList = () => async dispatch => {\n  await dispatch({ type: LOADING_BATTLES_LIST });\n};\n\n// Dispatch Loading\nexport const loadingOnCount = () => async dispatch => {\n  await dispatch({ type: LOADING_BATTLES_COUNT });\n};\n\n// Dispatch Reset store\nexport const resetComponent = () => async dispatch => {\n  await dispatch({ type: RESET_BATTLE });\n};\n","import React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Col, Row, Container, Card } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCount, getList, resetComponent } from \"actions/list\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst loaderCSS = css`\n  position: absolute;\n  top: calc(50% - 30px);\n  left: calc(50% - 30px);\n`;\n\nconst List = ({\n  list,\n  loading,\n  loadingCount,\n  count,\n  getCount,\n  getList,\n  resetComponent,\n}) => {\n  const [onlyOnce, setOnce] = useState(true);\n\n  useMemo(() => {\n    if(onlyOnce) {\n      resetComponent();\n      setOnce(false);\n    }\n    getCount();\n    getList();\n  }, [resetComponent, setOnce, getCount, getList]);\n\n  return (\n    <section className=\"sptb p-3\">\n      {\n        ( loading || loadingCount ) && (\n        <div className=\"custom_overlay\">\n          <ClipLoader \n            css={loaderCSS}\n            size={60}\n            loading={true}\n          />\n        </div>)\n      }\n      <Row>\n        <Col>\n          <h3>{`Total Battles Occurred: ${count}`}</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h3>Battle Places</h3>\n          <ul>\n          {\n            list.map((battle, index) => {\n              return <li key={index}>{battle}</li>\n            })\n          }\n          </ul>\n        </Col>\n      </Row>\n    </section>\n  );\n} \n\nList.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  loadingCount: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired,\n  list: PropTypes.array.isRequired,\n  getList: PropTypes.func.isRequired,\n  getCount: PropTypes.func.isRequired,\n  resetComponent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.battles.loadingList,\n  loadingCount: state.battles.loadingCount,\n  count: state.battles.count,\n  list: state.battles.list,\n});\n\nexport default connect(mapStateToProps, {\n  getList,\n  getCount,\n  resetComponent,\n})(withRouter(List));\n\n","import Home from 'views/Battle/grid';\nimport Battles from 'views/Battle/list';\n\nconst BattleRoutes = [\n  { path: \"/\", exact: true, name: \"Home\", component: Home },\n  { path: \"/battles\", exact: true, name: \"Battles\", component: Battles },\n];\n\nexport default BattleRoutes;","import React, { Suspense } from 'react'\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n\nconst PageContent = ({ routes }) => {\n  return (\n    <Suspense fallback={\"loading...\"}>\n      <Switch>\n        {\n          routes.map((route, idx) => {\n            try {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => <route.component { ...props } /> }\n                />\n              );\n            }\n            catch(err){ \n              console.log(\"err\", err);\n            }\n          })\n        }\n      </Switch>\n    </Suspense>\n  )\n}\n\nexport default React.memo(PageContent)\n","export default __webpack_public_path__ + \"static/media/logo.3d2f4a32.jpg\";","import React, { useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { searchBattle, updateSearchedBattleID, resetComponent } from \"actions/search\";\nimport AsyncSelect from \"react-select/async\";\nimport { Col } from \"react-bootstrap\";\n\nconst Search = ({\n  loading,\n  sortingParams,\n  searchBattle,\n  updateSearchedBattleID,\n  resetComponent,\n}) => {\n  const initialSortingParams = {\n    limit: 40,\n    king: \"\",\n    location: \"\",\n    type: \"\",\n  };\n  const [listParams, setListParams] = useState(initialSortingParams);\n  const [onlyOnce, setOnce] = useState(true);\n  let delayTimer;\n\n  const execWithDelay = (cb, input) => (delay = 750) => {\n    clearTimeout(delayTimer);\n    return new Promise((resolve) => {\n      delayTimer = setTimeout(() => {\n        resolve(cb(input));\n      }, delay);\n    })\n  }\n\n  const loadOptions = inputValue => {\n    const params = {\n      ...sortingParams,\n      location: inputValue,\n    };\n    return searchBattle(params).then((res) => {\n      if (res.data.status) {\n        const data = res.data.response;\n        const result = data.map((b) => ({\n          value: b._id,\n          label: b.name\n        }));\n        return result;\n      }\n    });\n  }\n\n  //########################## handle select ##############################\n  const handleSelect = name => (value) => {\n    let fieldValue = [];\n    if (value) {\n      if (value.length) {\n        fieldValue = value.map((item) => (item.value));\n      }\n      else if (value.value) {\n        fieldValue = value.value;\n      }\n    }\n    switch (name) {\n      case \"searchBattle\":\n        updateSearchedBattleID(fieldValue);\n        break;\n    }\n  };\n\n  useMemo(() => {\n    if(onlyOnce) {\n      resetComponent();\n      setOnce(false);\n    }\n    searchBattle(listParams);\n  }, [resetComponent, setOnce, searchBattle, listParams]);\n\n  return (\n    <Col md={8} lg={6}>\n      <AsyncSelect \n        placeholder=\"Search Battles...\"\n        cacheOptions\n        isLoading={loading}\n        defaultOptions\n        onChange={handleSelect(\"searchBattle\")}\n        loadOptions={(input) => execWithDelay(loadOptions, input)() }\n      />\n    </Col>\n  );\n} \n\nSearch.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  searchBattle: PropTypes.func.isRequired,\n  resetComponent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.search.loadingList,\n  sortingParams: state.search.sortingParams,\n});\n\nexport default connect(mapStateToProps, {\n  searchBattle,\n  updateSearchedBattleID,\n  resetComponent,\n})(Search);\n\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Nav,\n  Navbar,\n  Image\n} from \"react-bootstrap\";\nimport logo from \"assets/logo.jpg\";\nimport Search from \"views/Search\";\n\nconst PageHeader = () => {\n  return (\n    <Navbar bg=\"light\" fixed=\"top\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <Image src={logo} style={{ height: 60, width: 60, padding: 10 }} alt=\"game of thrones\"/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/battles\">Battles</Nav.Link>\n        </Nav>\n        <Search />\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default PageHeader;\n","/* eslint-disable */\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport BattleRoutes from \"Routes/Battle\";\nimport PageContent from \"./PageContent\";\nimport PageHeader from \"./PageHeader\";\nimport { Container } from \"react-bootstrap\";\n\nconst index = ({ }) => {\n  return (\n    <Container>\n      <PageHeader/>\n      <PageContent routes={BattleRoutes}/>\n    </Container>\n  )\n};\n\nexport default withRouter(index);\n"],"sourceRoot":""}